<?php

/**
 * @file
 * Module relating to the CEC_multilingual object model
 */

define('ISLANDORA_MULTILINGUAL_CMODEL', 'islandora:CEC_multilingual');

/** 
 * Implements hook_menu()
 */

function islandora_multilingual_menu() {
  $items = array();

  $items['admin/islandora/multilingual'] = array(
    'title' => 'Multilingual',
    'description' => 'Choose languages for Multilingual Islandora to enable',
    'file' => 'admin/multilingual.admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_multilingual_admin_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/** 
 * Implements hook_variable_info()
 */
function islandora_multilingual_variable_info() {
  $variable = array();
  $variable['islandora_languages'] = array(
    'title' => t('Islandora languages'),
    'description' => t('Languages in which multilingual metadata will be available. Enter a comma-separated list of upper-case language abbreviations. E.g. for English and French, enter "EN,FR" -- note, no space after the comma.'),
    'type' => 'string',
  );
}

/**
 * Implements hook_theme().
 */
function islandora_multilingual_theme($existing, $type, $theme, $path) {
  return array(
    // this includes some general theming that should be moved out.
    'islandora_multilingual' => array(
      'file' => 'theme/islandora_multilingual.theme.inc',
      'template' => 'theme/islandora-multilingual',
      'pattern' => 'islandora_multilingual__',
      'variables' => array('islandora_object' => NULL),
    ),
    'language_links' => array(
      'file' => 'theme/language_links.theme.inc',
      'template' => 'theme/language-links',
      'variables' => array('lang_array' => array()),
    ),
    // more general than multilingual
    'display_title' => array(
      'file' => 'theme/display_title.theme.inc',
      'template' => 'theme/display-title',
      'variables' => array('title' => '', 'subTitle' => ''),
    ),
  );
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 *
 */
function islandora_multilingual_islandora_view_object($object, $page_number, $page_size) {
  if (in_array(ISLANDORA_MULTILINGUAL_CMODEL, $object->models)) {
    $result = array();
    $result['Multilingual View'] = theme('islandora_multilingual', array('islandora_object' => $object));
    return $result;
  }
}

/**
 * Implements hook_islandora_ingest_steps().
 *
 * Our custom ingest form lets you select the language of the uploaded file.
 */
function islandora_multilingual_islandora_CEC_multilingual_islandora_ingest_steps(array $configuration) {
  if (in_array(ISLANDORA_MULTILINGUAL_CMODEL, $configuration['islandora']['shared_storage']['models'])) { 
      return array(
        'islandora_multlingual_pdf_file_upload' => array(
        'weight' => 10,
        'type' => 'form',
        'form_id' => 'islandora_multilingual_pdf_upload_form',
        'module' => 'islandora_multilingual',
        'file' => 'includes/multilingual_upload.form.inc',
      )
    );
  }
}

/** 
 * Implements hook_islandora_datastream_ingested().
 *
 * If a MODS ds was ingested, create the other languages.
 * If an OBJ ds was ingested, create the thumbnails.
 */
function islandora_multilingual_islandora_datastream_ingested($object, $datastream) {
  if (preg_match('/MODS/', $datastream->id) === 1) {
      $enabled_languages = explode(',', variable_get('islandora_languages', 'EN,'));
      $missing_ds = FALSE;
      foreach ($enabled_languages as $lang) {
          if (!isset($object['MODS-' . $lang])) {
              $missing_ds = TRUE;
          }
      }
    if ($missing_ds) {
      module_load_include('inc', 'islandora_multilingual', 'includes/Multilingual');
      sleep(2);
      multilingual_create_multiple_mods_datastreams($object, $datastream);
      module_invoke_all('islandora_multilingual_mods_sync', $object, $datastream);
    } 
  }
  if (preg_match('/OBJ.*/', $datastream->id) === 1) {
    islandora_multilingual_create_all_derivatives($object, $datastream->id);
  }
}

/** 
 * Implements hook_form_FORM_ID_alter()
 *
 * In the Islandora edit datastream form, 
 *  - add our custom validation function
 *  - fill the 'label' field
 */
function islandora_multilingual_form_xml_form_builder_edit_datastream_form_alter(&$form, $form_state) {
  if (in_array(ISLANDORA_MULTILINGUAL_CMODEL, $form_state['datastream']->parent->models) and !isset($form['available_forms'])) {
    array_unshift($form['#validate'], 'islandora_multilingual_datastream_form_validate');
    multilingual_fill_mods_label_field($form, $form_state);
  }
}

/**
 * Implements hook_form_FORM_ID_alter()
 *
 * In the Islandora ingest form, 
 *  - add our custom validate function
 */
function islandora_multilingual_form_islandora_ingest_form_alter(&$form, $form_state) {
  if (isset($form_state['islandora']['objects'])) {
      if (isset($form_state['islandora']['objects'][0]) and in_array(ISLANDORA_MULTILINGUAL_CMODEL, $form_state['islandora']['objects'][0]->models)) {
          array_unshift($form['#validate'], 'islandora_multilingual_datastream_form_validate');
      }
  }
}

function multilingual_fill_mods_label_field(&$form, $form_state) {
    $form['label']['#default_value'] = $form_state['datastream']->parent->label;
    $form['label']['#access'] = FALSE;
}
/*
 * This custom validation function runs after you edit metadata using a mods form
 * either when ingesting or when editing an existing datastream.
 *
 * It marks this datastream as "master".
 * 
 */
function islandora_multilingual_datastream_form_validate(array &$form, array &$form_state) {
    // Determine whether the form has been submitted (since the form validation function
    // also runs when the user creates/deletes tab form elements).
    $form_was_submitted = FALSE;
    if (($form['#form_id'] == 'islandora_ingest_form') and ($form_state['islandora']['step_id'] == 'xml_form_builder_metadata_step') and $form_state['submitted']) {
        $form_was_submitted = TRUE;
    } elseif (($form['#form_id'] == 'xml_form_builder_edit_datastream_form') and ($form_state['submitted'])) {
        $form_was_submitted = TRUE;
    } 

    if ($form_was_submitted) {
        // Mark this datastream as "master"
        $form_state['values']['master'] = 'yes';
    }
}

/**
 * Implements hook_xml_form_builder_get_transforms().
 *
 * Grabs any XSLTs from the "transforms" subdirectory.
 */
function islandora_multilingual_xml_form_builder_get_transforms() {
  $p = drupal_get_path('module', 'islandora_multilingual');
  $transforms = array();
  $include_path = "$p/transforms";
  $dir = opendir($include_path);
  if ($dir !== FALSE) {
    while (($file = readdir($dir)) !== FALSE) {
      if (preg_match('/\.xslt?$/', $file)) {
        $transforms["$file"] = "$include_path/$file";
      }
    }
  }
  closedir($dir);
  return $transforms;
}

/* Implements hook_xml_form_builder_get_self_transforms
 *
 * Grabs any XSLTs from the "self_transforms" subdirectory.
 */
function islandora_multilingual_xml_form_builder_get_self_transforms() {
  $p = drupal_get_path('module', 'islandora_multilingual');
  $transforms = array();
  $include_path = "$p/self_transforms";
  $dir = opendir($include_path);
  if ($dir !== FALSE) {
    while (($file = readdir($dir)) !== FALSE) {
      if (preg_match('/\.xslt?$/', $file)) {
        $transforms["$file"] = "$include_path/$file";
      }
    }
  }
  closedir($dir);
  return $transforms;
}
